{"version":3,"sources":["regexp.js","index.js"],"names":["module","exports","func","query","options","regexp","defaults","result","Object","assign","settings","parse","require","prototype","parse_regexp","is_debug","b","exec","push","data","groups","term","type","kv","data_sign","term_sign","kv_sign","sign","term1","term2","term3","key","k1","k2","k3","value","v1","v2","v3","length","get","get_term","options_default","is_flat","term_only","i","list","forEach","item","get_keyvalue","is_object","build","globalThis","SearchQueryParser"],"mappings":"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","file":"index.min.js","sourceRoot":"../main","sourcesContent":["\n/* source ./syntax.regexp */\nmodule.exports = /(?<kv>(?<kv_sign>[^\\s\\t\\r\\n0-9a-zA-Z'\"])?(?<k>'(?<k1>[^']*)'|\"(?<k2>[^\"]*)\"|(?<k3>\\w+))[:=](?<v>'(?<v1>[^']*)'|\"(?<v2>[^\"]*)\"|(?<v3>\\w+)))|(?<term>(?<term_sign>[^\\s\\t\\r\\n0-9a-zA-Z'\"])?(?:'(?<term1>[^']*)'|\"(?<term2>[^\"]*)\"|(?<term3>\\w+)))/g;\n","\n/**\n* \n* @author Mayendra Costanov (anovsiradj) <anov.siradj22@gmail.com>\n* @version 0.0.1\n* @license MIT\n* \n*/\n\n'use strict';\n\nfunction func(query, options={}) {\n\tthis.regexp = func.defaults.regexp;\n\tthis.query = null;\n\tthis.result = null;\n\n\tthis.options = {};\n\tObject.assign(this.options, func.defaults.options);\n\tthis.settings(options);\n\n\tthis.parse(query);\n}\n\nfunc.defaults = {\n\tregexp: require('./regexp.js'),\n\toptions: {},\n};\n\nfunc.prototype.settings = function(options={}) {\n\tObject.assign(this.options, options);\n};\n\n// q=query,b=buffer //\nfunc.prototype.parse_regexp = function(query,is_debug=false) {\n\tif (query) this.query = query;\n\n\tlet result = [];\n\n\tlet b;\n\twhile((b = this.regexp.exec(this.query)) !== null) {\n\t\tif (is_debug) {\n\t\t\tresult.push(b);\n\t\t\tcontinue;\n\t\t}\n\n\t\tb = b.groups;\n\t\tlet data = {};\n\n\t\tif (b.term) data.type = 'term';\n\t\tif (b.kv) data.type = 'keyvalue';\n\n\t\tlet data_sign = b.term_sign || b.kv_sign || null;\n\t\tif (data_sign) data.sign = data_sign;\n\n\t\tif (data.type === 'term') {\n\t\t\tdata.term = b.term1 || b.term2 || b.term3;\n\t\t}\n\n\t\tif (data.type === 'keyvalue') {\n\t\t\tdata.key = b.k1 || b.k2 || b.k3;\n\t\t\tdata.value = b.v1 || b.v2 || b.v3;\n\t\t}\n\n\t\tresult.push(data);\n\t}\n\n\tif (is_debug) return result;\n\tthis.result = result;\n};\n\nfunc.prototype.parse = function(query) {\n\tthis.parse_regexp(query);\n\n\tif (this.result.length) return true;\n\treturn false;\n};\n\nfunc.prototype.get = function() {\n\treturn this.result;\n};\n\nfunc.prototype.get_term = function(options={}) {\n\tlet options_default = {\n\t\tis_flat: false,\n\t\tterm_only: false,\n\t};\n\tfor(let i in options_default) if (!(i in options_default)) options[i] = options_default[i];\n\n\tlet list = [];\n\tthis.result.forEach(data => {\n\t\tif (data.type !== 'term') return;\n\n\t\tif (options.term_only) return list.push(data.term);\n\n\t\tif (options.is_flat) {\n\t\t\tlet item = [data.term];\n\t\t\tif(data.sign) item.push(data.sign);\n\n\t\t\treturn list.push(item);\n\t\t}\n\n\t\treturn list.push(data);\n\t});\n\treturn list;\n};\n\nfunc.prototype.get_keyvalue = function(options={}) {\n\tlet options_default = {\n\t\tis_flat: false,\n\t\tis_object: false, // todo\n\t};\n\tfor(let i in options_default) if (!(i in options_default)) options[i] = options_default[i];\n\n\tlet list = [];\n\tthis.result.forEach(data => {\n\t\tif (data.type !== 'keyvalue') return;\n\n\t\tif (options.is_flat) {\n\t\t\tlet item = [data.key, data.value];\n\t\t\tif (data.sign) item.push(data.sign);\n\n\t\t\treturn list.push(item);\n\t\t}\n\n\t\tlist.push(data);\n\t});\n\treturn list;\n};\n\nfunc.prototype.build = function() {\n\t// todo // re-build parsed query //\n};\n\nglobalThis.SearchQueryParser = func;\n\nmodule.exports = func;\n"]}